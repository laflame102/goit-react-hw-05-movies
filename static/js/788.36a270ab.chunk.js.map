{"version":3,"file":"static/js/788.36a270ab.chunk.js","mappings":"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","sources":["components/MoviesList/HomeMovieList.jsx","pages/Home.jsx","services.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomeMovieList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {films.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default HomeMovieList;\n\nHomeMovieList.propTypes = {\n  films: PropTypes.array,\n};\n","import Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MoviesList/HomeMovieList';\nimport { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { getTrending } from 'services';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await getTrending();\n        setFilms(response.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {loading && <Loader />}\n      <MovieList films={films} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Home;\n\n// https://api.themoviedb.org/3/trending?api_key=${KEY}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '46524a805b39690e1dbf4f8ffae20232';\n\nexport const getTrending = async () => {\n  const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no trending films`));\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no movie with such id ${movieId}`));\n};\n\nexport const getCast = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no movie with such id ${movieId}`));\n};\n\nexport const getReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no movie with such id ${movieId}`));\n};\n\nexport const getMovies = async movieName => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieName}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(\n    new Error(`There is no movie with such name ${movieName}`)\n  );\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["films","location","useLocation","map","id","original_title","to","state","from","useState","setFilms","loading","setLoading","useEffect","fetchData","getTrending","response","results","console","log","Loader","BASE_URL","KEY","fetch","ok","json","Promise","reject","Error","getMovieDetails","movieId","getCast","getReviews","getMovies","movieName","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}