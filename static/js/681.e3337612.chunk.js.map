{"version":3,"file":"static/js/681.e3337612.chunk.js","mappings":"kOA6CA,UAxCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGSG,EAAAA,EAAAA,IAAWC,OAAOP,IAH3B,OAGRQ,EAHQ,OAIdT,EAAWS,EAASC,SAJN,gDAMdC,QAAQC,IAAR,MANc,yBAQdR,GAAW,GARG,4EAAH,qDAYfE,GACD,GAAE,CAACL,KAGF,2BACGE,IAAW,SAAC,IAAD,KACZ,wBACGJ,EAAQc,OAAS,EAChBd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,uBAAIF,KACJ,uBAAIC,MAFGC,EADC,KAOZ,0DAKT,C,sLC3CKC,EAAW,+BACXC,EAAM,mCAECC,EAAW,mCAAG,oGACFC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAD9C,YACnBV,EADmB,QAGZa,GAHY,gCAIVb,EAASc,OAJC,wEAOlBC,QAAQC,OAAO,IAAIC,MAAJ,gCAPG,2CAAH,qDAUXC,EAAe,mCAAG,WAAM1B,GAAN,uFACNoB,MAAM,GAAD,OAAIH,EAAJ,kBAAsBjB,EAAtB,oBAAyCkB,IADxC,YACvBV,EADuB,QAGhBa,GAHgB,gCAIdb,EAASc,OAJK,wEAOtBC,QAAQC,OAAO,IAAIC,MAAJ,yCAA4CzB,MAPrC,2CAAH,sDAUf2B,EAAO,mCAAG,WAAM3B,GAAN,uFACEoB,MAAM,GAAD,OACvBH,EADuB,kBACLjB,EADK,4BACsBkB,IAF7B,YACfV,EADe,QAKRa,GALQ,gCAMNb,EAASc,OANH,wEASdC,QAAQC,OAAO,IAAIC,MAAJ,yCAA4CzB,MAT7C,2CAAH,sDAYPM,EAAU,mCAAG,WAAMN,GAAN,uFACDoB,MAAM,GAAD,OACvBH,EADuB,kBACLjB,EADK,4BACsBkB,IAF1B,YAClBV,EADkB,QAKXa,GALW,gCAMTb,EAASc,OANA,wEASjBC,QAAQC,OAAO,IAAIC,MAAJ,yCAA4CzB,MAT1C,2CAAH,sDAYV4B,EAAS,mCAAG,WAAMC,GAAN,uFACAT,MAAM,GAAD,OACvBH,EADuB,iCACUC,EADV,kBACuBW,IAF5B,YACjBrB,EADiB,QAKVa,GALU,gCAMRb,EAASc,OAND,wEAShBC,QAAQC,OACb,IAAIC,MAAJ,2CAA8CI,MAVzB,2CAAH,qD,sBC/CtB,SAASC,EAAmBC,EAAKC,EAASR,EAAQS,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAf,EAAOe,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERf,QAAQS,QAAQM,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIxB,SAAQ,SAAUS,EAASR,GACpC,IAAIO,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbR,EAAmBC,EAAKC,EAASR,EAAQS,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdnB,EAAmBC,EAAKC,EAASR,EAAQS,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews.jsx","services.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services';\nimport Loader from './Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const response = await getReviews(Number(movieId));\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <b>{author}</b>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>Sorry, there is no reviews</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '46524a805b39690e1dbf4f8ffae20232';\n\nexport const getTrending = async () => {\n  const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no trending films`));\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no movie with such id ${movieId}`));\n};\n\nexport const getCast = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no movie with such id ${movieId}`));\n};\n\nexport const getReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(new Error(`There is no movie with such id ${movieId}`));\n};\n\nexport const getMovies = async movieName => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${movieName}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  return Promise.reject(\n    new Error(`There is no movie with such name ${movieName}`)\n  );\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","reviews","setReviews","movieId","useParams","loading","setLoading","useEffect","fetchCast","getReviews","Number","response","results","console","log","length","map","author","content","id","BASE_URL","KEY","getTrending","fetch","ok","json","Promise","reject","Error","getMovieDetails","getCast","getMovies","movieName","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}